{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPUMxeIhBr07mZh00XyUEHH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Relevant reading:\n","\n","https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9544977 - Forcasting in the indian economy [1]\n","\n","https://www.outspokenmarket.com/uploads/8/8/2/3/88233040/hurst_exponent_and_financial_market_predictability.pdf - Description of the use of the hurst exponent [2]\n","\n","https://core.ac.uk/download/pdf/132797589.pdf - Some blokes masters thesis on GARCH models [3]\n","\n","https://onlinelibrary.wiley.com/doi/full/10.1002/jae.842?casa_token=c5QXzBtjIg4AAAAA%3AwhYIc0nadTRSnnI086L5n6MfV6o6rGJuF_OfT8znaurv7od_n3QfcsSnFhPJgsGviKzArcOUWpJFDBKCbQ - Multivariet GARCH (MGARCH) reviews [4]"],"metadata":{"id":"MDTq-xusRoMH"}},{"cell_type":"markdown","source":["The goal of this note book is to explain the use of the Hurst exponent and to create a function that will consider The hurst exponent when modeling a time series.\n","\n","The objectives for this notebool may be split in two:\n","\n","1) Inform the choice of model to be applied (This can be added to as new models are developed and discovered).\n","\n","2) Forecast the afformentioned time series forward a given amount of time. We will also consider the use of different distributions (namely the skewed-t distribution).\n","\n","Much of this work is adapted from [1].\n","\n"],"metadata":{"id":"obTRUrFyFwCJ"}},{"cell_type":"markdown","source":["# Imports"],"metadata":{"id":"-r3VKx7d3fMH"}},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Eg5qvtpj3YrV","executionInfo":{"status":"ok","timestamp":1667044035909,"user_tz":-60,"elapsed":8317,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"e57a0068-77e6-4b5a-8dd9-7b99273ef4b4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: arch in /usr/local/lib/python3.7/dist-packages (5.3.1)\n","Requirement already satisfied: statsmodels>=0.11 in /usr/local/lib/python3.7/dist-packages (from arch) (0.12.2)\n","Requirement already satisfied: scipy>=1.3 in /usr/local/lib/python3.7/dist-packages (from arch) (1.7.3)\n","Requirement already satisfied: pandas>=1.0 in /usr/local/lib/python3.7/dist-packages (from arch) (1.3.5)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from arch) (1.21.6)\n","Requirement already satisfied: property-cached>=1.6.4 in /usr/local/lib/python3.7/dist-packages (from arch) (1.6.4)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0->arch) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0->arch) (2022.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=1.0->arch) (1.15.0)\n","Requirement already satisfied: patsy>=0.5 in /usr/local/lib/python3.7/dist-packages (from statsmodels>=0.11->arch) (0.5.3)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: yfinance in /usr/local/lib/python3.7/dist-packages (0.1.84)\n","Requirement already satisfied: requests>=2.26 in /usr/local/lib/python3.7/dist-packages (from yfinance) (2.28.1)\n","Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from yfinance) (0.0.11)\n","Requirement already satisfied: lxml>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from yfinance) (4.9.1)\n","Requirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.3.5)\n","Requirement already satisfied: appdirs>=1.4.4 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.4.4)\n","Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from yfinance) (1.21.6)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->yfinance) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->yfinance) (2022.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.24.0->yfinance) (1.15.0)\n","Requirement already satisfied: charset-normalizer<3,>=2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2.1.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2.10)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.26->yfinance) (2022.9.24)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: hmmlearn in /usr/local/lib/python3.7/dist-packages (0.2.8)\n","Requirement already satisfied: numpy>=1.10 in /usr/local/lib/python3.7/dist-packages (from hmmlearn) (1.21.6)\n","Requirement already satisfied: scikit-learn>=0.16 in /usr/local/lib/python3.7/dist-packages (from hmmlearn) (1.0.2)\n","Requirement already satisfied: scipy>=0.19 in /usr/local/lib/python3.7/dist-packages (from hmmlearn) (1.7.3)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.16->hmmlearn) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.16->hmmlearn) (1.2.0)\n"]}],"source":["#Import ARACH model\n","!pip install arch\n","!pip install yfinance\n","!pip install hmmlearn\n","from sklearn.linear_model import LinearRegression\n","\n","import arch\n","from arch import arch_model\n","from arch.__future__ import reindexing\n","\n"]},{"cell_type":"code","source":["import pandas as pd\n","import yfinance as yf\n","from pandas_datareader import data\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from matplotlib import pyplot\n","from matplotlib import cm\n","from hmmlearn.hmm import GaussianHMM\n","from datetime import datetime\n","import math\n","from sklearn.linear_model import LinearRegression\n","from scipy.stats import norm\n","from statsmodels.graphics.tsaplots import plot_pacf, plot_acf\n"],"metadata":{"id":"A3RD8iXk3luo","executionInfo":{"status":"ok","timestamp":1667044035910,"user_tz":-60,"elapsed":19,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":["# Statistical Indicators"],"metadata":{"id":"ueRzqrqoUseK"}},{"cell_type":"markdown","source":["## Hurst Exponent \n","\n","The hurst exponent is a way of measureing the memory of a process. It can be calculated by the following algorthm:\n","\n","\n","1: Calculate $\\mu = E[s_i]$ where $S_i$ is a time series with constant mean.\n","\n","2: Calculate $y_i = S_i - \\mu$ (Adjusted series)\n","\n","3: Calculate $z_i = \\sum_{i=1}^t y_i$ (Deviant Series)\n","\n","4: Calculate $Ra_t = max_{i \\in 1,..,t}(z_i) - min_{i \\in 1,..,t}(z_i)$ (Range Series)\n","\n","5: Calculate $\\sigma_t = \\sqrt{\\frac{1}{t} \\sum_{i=1}^t(S_i - \\mu_t)}$ (Std series)\n","\n","6: Calculate $(\\frac{Ra}{\\sigma})_t := \\frac{Ra_t}{\\sigma_t}, t \\in \\{1,..,n\\}$\n","\n","\n","We notice that the series $(\\frac{Ra}{\\sigma})_t \\propto ct^H$, hence\n","\n","$$\n","\\begin{array}{l}\n","\\left(\\frac{R_u}{\\sigma}\\right)_t=c t^{\\mathcal{H}}\\\\\n","\\Rightarrow \\log _2\\left(\\frac{\\mathrm{Ra}}{\\sigma}\\right)_t=\\log _2(c)+\\mathcal{H} \\log _2(t)\\\\\n","\\Rightarrow \\frac{\\log _2\\left(\\frac{R a}{\\sigma}\\right)_{t}}{\\log _2(t)} \\sim \\mathcal{H}\n","\\end{array}\n","$$\n","\n","Where we assume that $\\log _2(c)$ is small.\n"],"metadata":{"id":"PHMvUsHoXuKD"}},{"cell_type":"code","source":["## Determine the hurst exponent of a time series ##\n","\n","## Inputs\n","# time_series - mean 0 np.array(n).\n","# max_lag - integerm ideally such that max_lag | n\n","1\n","## Outputs\n","# H - Hurst exponent estimate\n","\n","def get_hurst_exponent(time_series, max_lag):\n","\n","  ##Truncate time series\n","  time_series = time_series[time_series.shape[0] - max_lag:]\n","  #print('ts: ' , time_series)\n","\n","  ##Compute mean\n","  mu = time_series.mean()\n","  #print('mu: ' , mu)\n","\n","  ##Compute adjusted series\n","  adusuted_series = np.zeros(max_lag)\n","  for i in range(time_series.shape[0]):\n","    adusuted_series[i] = time_series[i] - mu\n","  #print(\"as: \" , adusuted_series)\n","\n","  ##Compute Deviant Series\n","  deviant_series = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    deviant_series[t] = np.sum(adusuted_series[:t+1])\n","  #print('ds: ' , deviant_series)\n","\n","  ##Compute range series\n","  range_series = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    range_series[t] = np.max(deviant_series[:t+1]) - np.min(deviant_series[:t+1])\n","  #print('rs: ' , range_series)\n","\n","  ##Compute std series\n","  std_series = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    std_series[t] = np.std(adusuted_series[:t+1])\n","  #print('std: ' , std_series)\n","\n","  ##Compute (Ra/sigma)_t\n","  Ra_sigma = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    Ra_sigma[t] = range_series[t]/std_series[t]\n","  #print('ra/s: ' , Ra_sigma)\n","\n","  ##Compute logs\n","  #print(Ra_sigma)\n","  y = np.log2(Ra_sigma[1:])\n","  X = np.log2(np.linspace(1,Ra_sigma[1:].shape[0],Ra_sigma[1:].shape[0]))\n","  X = X[:, None]\n","  #print(X)\n","  #print(np.linspace(1,Ra_sigma.shape[0],Ra_sigma.shape[0]))\n","  #print(y)\n","  ##Find log log gradient (This is the hurst exponent)\n","  reg = LinearRegression().fit(X, y)\n","\n","  return Ra_sigma[1:],reg.coef_"],"metadata":{"id":"S8tfMPHTXk29","executionInfo":{"status":"ok","timestamp":1667044035910,"user_tz":-60,"elapsed":18,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["scaled_range, gradient = get_hurst_exponent(np.array([1,2,3,4,5,6]), max_lag=6)\n","scaled_range, gradient"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9XZ7flpdqGFw","executionInfo":{"status":"ok","timestamp":1667044035911,"user_tz":-60,"elapsed":17,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"56a41795-de0f-4490-81e9-66000a5b50f8"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:47: RuntimeWarning: invalid value encountered in double_scalars\n"]},{"output_type":"execute_result","data":{"text/plain":["(array([3.        , 2.44948974, 1.78885438, 1.41421356, 2.6349302 ]),\n"," array([-0.26396499]))"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["## Import data from yahoo finance"],"metadata":{"id":"egOnCvAsBTIF"}},{"cell_type":"code","source":["#Import data from start_date to end_date\n","\n","start_date = '2010-11-01'\n","end_date = '2022-10-04'\n","ticker = '^GSPC'\n","\n","number_of_lagged_periods = 10\n","GSPC = yf.download(ticker, start_date, end_date)\n","VIX = yf.download('^VIX', start_date, end_date)\n","target_VIX = yf.download('^VIX', start_date, end_date)\n","# for i in range(0,number_of_lagged_periods):\n","#   data = data.join(VIX.shift(i), lsuffix=\"\", rsuffix=(\"VIX_\"+str(i)+\" Periods Ago\"))\n","# print(data.columns)\n","# data"],"metadata":{"id":"Zxhyqlei3lrw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667044035911,"user_tz":-60,"elapsed":13,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"92e00800-1785-4418-c351-5282bfeadfb7"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n"]}]},{"cell_type":"code","source":["VIX['returns'] = VIX['Adj Close'] - VIX['Adj Close'].shift(1)\n","VIX['log returns'] = np.log(VIX['Adj Close']) - np.log(VIX['Adj Close'].shift(1))\n","GSPC['returns'] = GSPC['Adj Close'] - GSPC['Adj Close'].shift(1)\n","GSPC['log returns'] = np.log(GSPC['Adj Close']) - np.log(GSPC['Adj Close'].shift(1))"],"metadata":{"id":"HDMDHZ7bi2ZM","executionInfo":{"status":"ok","timestamp":1667044036808,"user_tz":-60,"elapsed":905,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":38,"outputs":[]},{"cell_type":"markdown","source":["# GARCH model"],"metadata":{"id":"OZDmFW9BM4sZ"}},{"cell_type":"markdown","source":["A GARCH Model is specifid by $ y_t = \\sigma_t e_t $ and $  \\sigma_t^2 =\\omega + \\sum_{j=1}^p \\alpha_i y_{t-i}^2 + \\sum_{j=1}^q \\beta_j \\sigma_{t-j}^2 $ with reference to the information set $F_{t-1} = \\sigma\\{\\epsilon  | -∞ < i < t-1\\}$\n","\n","Since we assume that the log returns are stationary with mean 0 we approximate the initial volatility as $(y_t - \\bar y)^2 =y_t^2$. At time $t = 0$ this means we initialise the volatility as $\\sigma^2_0 = y_0^2$.\n","\n","The GARCH model is used to model and auto regressive process where the volatility is a function of the previous time series values and the previous volatilities.\n","\n"],"metadata":{"id":"YOZzsEmp3_b0"}},{"cell_type":"markdown","source":["The subject of this model will be the LOG RETURNS, given by the expresion $y_t = ln(P_k) - ln(P_{k-1}) = ln(1 + \\frac{P_k-P_{k-1}}{P_{k-1}})$ "],"metadata":{"id":"8BwZtfRlLxws"}},{"cell_type":"markdown","source":["## Statistical analysis"],"metadata":{"id":"VZbO7fbaNEBF"}},{"cell_type":"code","source":["#Produce the log returns and verify mean 0.\n","hist = VIX['log returns'].hist(bins=1000)\n","VIX['log returns'].mean() #Verify that the data has mean 0."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"wuAEdVXcvkkE","executionInfo":{"status":"ok","timestamp":1667044038366,"user_tz":-60,"elapsed":1562,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"3ae6cc16-bd42-4860-e1b4-82653963cbab"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.00010708000578710101"]},"metadata":{},"execution_count":39},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Fit a normal distribution to log returns\n","\n","# mean and standard deviation\n","mu, std = norm.fit(VIX['log returns'].dropna()) \n","  \n","# Plot the histogram.\n","plt.hist(VIX['log returns'], bins=100, density=True, alpha=0.6, color='b')\n","  \n","# Plot the PDF.\n","xmin, xmax = plt.xlim()\n","x = np.linspace(xmin, xmax, 100)\n","p = norm.pdf(x, mu, std)\n","  \n","plt.plot(x, p, 'k', linewidth=2)\n","title = \"Fit Values on log returns: mu = {:.2f} and std = {:.2f}\".format(mu, std)\n","plt.title(title)\n","  \n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"jK45Pu9-AiIx","executionInfo":{"status":"ok","timestamp":1667044039076,"user_tz":-60,"elapsed":715,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"0fb7c5d8-c53f-476d-81d4-92bd13c35e33"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Produce the log returns and verify mean 0.\n","hist = VIX['returns'].hist(bins=1000)\n","VIX['returns'].mean() #Verify that the data has mean 0."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"p_yA0B3Cwt0U","executionInfo":{"status":"ok","timestamp":1667044040606,"user_tz":-60,"elapsed":1534,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"85cb92ca-a875-48b9-b078-2520a3e3942d"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0027566668192545575"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXAAAAD4CAYAAAD1jb0+AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAQ10lEQVR4nO3dYYwcZ33H8e+/MSlRjtoxCVvLSXuRsFKFWIR6lYJA1R4hJZCqdisaBVno0qa6NxAF1ZVqQFVVqajhRaCItlKtJuJepBxRSGqLCCrXzTWtVAI2pL0kJnIITokbzoLYhksjkMW/L26cHOv17t7d7u0+e9+PZO08z8zs/u/J5OfxszNzkZlIksrzC4MuQJK0Mga4JBXKAJekQhngklQoA1ySCrVhLT/s8ssvz/Hx8bX8yCK8/PLLXHrppYMuYyg5Nu05Pu2NyvgcOXLkB5l5RXP/mgb4+Pg4hw8fXsuPLMLs7CyNRmPQZQwlx6Y9x6e9URmfiHi+Vb9TKJJUKANckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXENt7sSZQZcgDS0DXJIK1THAI+KaiHhiyZ8fRcRHI2JzRByMiGPV62VrUbAkaVHHAM/MZzLz+sy8HtgB/B/wMLAXOJSZ24BDVVuStEaWO4VyI/CdzHwe2AlMV/3TwK5eFiZJai+W81vpI+I+4JuZ+TcRcTozN1X9AZw6127aZwqYAqjVajtmZmZ6U/kIWVhYYGxsbNBlDKWTL53hTZs3DrqMoeWx096ojM/ExMSRzKw393cd4BFxMfC/wFsyc35pgFfrT2Vm23nwer2ePg/8fKPyzOJ++Nz9+7lz985BlzG0PHbaG5XxiYiWAb6cKZT3sXj2PV+15yNiS/XmW4CTqy9TktSt5QT4B4EvLGkfACar5Ulgf6+KkiR11lWAR8SlwE3AQ0u67wZuiohjwHuqtiRpjXT1OzEz82XgjU19P2TxqhRJ0gB4J6YkFcoAl6RCGeCSVCgDXJIKZYBLUqEMcEkqlAEuSYUywCWpUAa4JBXKAJekQhngklQoA1ySCmWAS1KhDHBJKpQBLkmFMsAlqVAGuCQVygCXpEIZ4JJUKANckgrV7W+l3xQRD0bEtyPiaES8IyI2R8TBiDhWvV7W72IlSa/p9gz8s8BXM/PXgLcCR4G9wKHM3AYcqtqSpDXSMcAjYiPwm8C9AJn508w8DewEpqvNpoFd/SpSknS+yMz2G0RcD+wDnmbx7PsIcBdwIjM3VdsEcOpcu2n/KWAKoFar7ZiZmenpDzAKFhYWGBsbG3QZQ+nkS2d40+aNgy5jaHnstDcq4zMxMXEkM+vN/d0EeB34GvDOzHw8Ij4L/Ai4c2lgR8SpzGw7D16v1/Pw4cMr+gFG2ezsLI1GY9BlDKXP3b+fO3fvHHQZQ8tjp71RGZ+IaBng3cyBvwC8kJmPV+0HgV8H5iNiS/XmW4CTvSpWktRZxwDPzO8D34uIa6quG1mcTjkATFZ9k8D+vlSodWl87yODLkEaehu63O5O4P6IuBh4DvgDFsP/gYi4A3geuLU/JUqSWukqwDPzCeC8+RcWz8YlSQPgnZiSVCgDXJIKZYBLUqEMcEkqlAEuSYUywCWpUAa4JBXKAJekQhngklQoA1xDy+ehSO0Z4JJUKANckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIK1VWAR8TxiJiLiCci4nDVtzkiDkbEser1sv6WqvXKW+ql1pZzBj6Rmddn5rnfTr8XOJSZ24BDVVuStEZWM4WyE5iulqeBXasvR5LUrcjMzhtFfBc4BSTw95m5LyJOZ+aman0Ap861m/adAqYAarXajpmZmV7WPxIWFhYYGxsbdBlDZe7EGQBql8D8K7B968YBVzScPHbaG5XxmZiYOLJk9uNVG7rc/12ZeSIi3gQcjIhvL12ZmRkRLf8myMx9wD6Aer2ejUZjeZWvA7OzszguP+/2at57z/az3DO3geO7G4MtaEh57LQ36uPT1RRKZp6oXk8CDwM3APMRsQWgej3ZryIlSefrGOARcWlEvOHcMvBbwJPAAWCy2mwS2N+vIiVJ5+tmCqUGPLw4zc0G4B8z86sR8Q3ggYi4A3geuLV/ZUqSmnUM8Mx8Dnhri/4fAjf2oyhJUmfeiSlJhTLAJalQBrgkFcoAVxF8Hop0PgNckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeAaOl7zLXXHAJekQhngklQoA1ySCmWAS1KhDHBJKpQBLkmFMsAlqVAGuCQVqusAj4iLIuJbEfHlqn11RDweEc9GxBcj4uL+lSlJaracM/C7gKNL2p8CPpOZbwZOAXf0sjBJUntdBXhEXAncAvxD1Q7g3cCD1SbTwK5+FChJai0ys/NGEQ8CfwW8AfgT4Hbga9XZNxFxFfCVzLyuxb5TwBRArVbbMTMz07PiR8XCwgJjY2ODLmNozJ048+py7RKYf2VxefvWjQOqaHh57LQ3KuMzMTFxJDPrzf0bOu0YEb8NnMzMIxHRWO4HZ+Y+YB9AvV7PRmPZbzHyZmdncVxec/uSh1nt2X6We+YWD9PjuxsDqmh4eey0N+rj0zHAgXcCvxMR7wdeD/wS8FlgU0RsyMyzwJXAif6VKUlq1nEOPDM/lplXZuY4cBvwr5m5G3gU+EC12SSwv29Vat3wUbJS91ZzHfifAn8cEc8CbwTu7U1JkqRudDOF8qrMnAVmq+XngBt6X5IkqRveiSlJhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqEMcEkqlAGuYnibvfTzDHBJKpQBLkmFMsA1NJwikZbHAJekQhngklQoA1ySCmWAS1KhDHBJKpQBLkmFMsAlqVAdAzwiXh8RX4+I/4qIpyLiL6r+qyPi8Yh4NiK+GBEX979cSdI53ZyB/wR4d2a+FbgeuDki3g58CvhMZr4ZOAXc0b8yJUnNOgZ4Llqomq+r/iTwbuDBqn8a2NWXCiVJLXU1Bx4RF0XEE8BJ4CDwHeB0Zp6tNnkB2NqfEiVJrURmdr9xxCbgYeDPgM9X0ydExFXAVzLzuhb7TAFTALVabcfMzEwv6h4pCwsLjI2NDbqMgZo7caZlf+0SmH/ltfb2rRvXqKIyeOy0NyrjMzExcSQz6839G5bzJpl5OiIeBd4BbIqIDdVZ+JXAiQvssw/YB1Cv17PRaCy39pE3OzvLeh+X2y/wIKs9289yz9xrh+nx3Y01qqgMHjvtjfr4dHMVyhXVmTcRcQlwE3AUeBT4QLXZJLC/X0VqtK3kKYQ+uVDq7gx8CzAdERexGPgPZOaXI+JpYCYi/hL4FnBvH+uUJDXpGOCZ+d/A21r0Pwfc0I+iJEmdeSemJBXKAJekQhngklQoA1xF8eoT6TUGuCQVygCXpEIZ4CqO0yjSIgNckgplgEtSoQxwSSqUAS5JhTLAJalQBrgkFcoAl6RCGeCSVCgDXMXyhh6tdwa4JBXKAJekQhngklQoA1ySCtUxwCPiqoh4NCKejoinIuKuqn9zRByMiGPV62X9L1eSdE43Z+BngT2ZeS3wduDDEXEtsBc4lJnbgENVW5K0RjoGeGa+mJnfrJZ/DBwFtgI7gelqs2lgV7+KlCSdLzKz+40jxoHHgOuA/8nMTVV/AKfOtZv2mQKmAGq12o6ZmZnVVz1iFhYWGBsbG3QZAzN34swF19UugflX2u+/fevGHldUjvV+7HQyKuMzMTFxJDPrzf1dB3hEjAH/BnwyMx+KiNNLAzsiTmVm23nwer2ehw8fXmbpo292dpZGozHoMgam3Q05e7af5Z65DW33P373Lb0uqRjr/djpZFTGJyJaBnhXV6FExOuALwH3Z+ZDVfd8RGyp1m8BTvaqWElSZ91chRLAvcDRzPz0klUHgMlqeRLY3/vyJEkX0v7fpoveCXwImIuIJ6q+jwN3Aw9ExB3A88Ct/SlRktRKxwDPzP8A4gKrb+xtOZKkbnknpgbi3BeXPlFQWjkDXJIKZYBLUqEMcEkqlAEuSYUywCWpUAa4BsYrUKTVMcAlqVAGuCQVygCXpEIZ4JJUKANckgplgEtSoQxwSSqUAa415bXfUu8Y4JJUKANckgplgGvN9HP6xKkZrUcGuCQVygCXpEJ1DPCIuC8iTkbEk0v6NkfEwYg4Vr1e1t8yVbq1mOJwGkXrTTdn4J8Hbm7q2wscysxtwKGqLUlaQx0DPDMfA15q6t4JTFfL08CuHtclSeogMrPzRhHjwJcz87qqfTozN1XLAZw6126x7xQwBVCr1XbMzMz0pvIRsrCwwNjY2KDL6Iu5E2fYvnUjcyfOvNrX3G6ndgnMv9L9523funG5JRZtlI+dXhiV8ZmYmDiSmfXm/g2rfePMzIi44N8CmbkP2AdQr9ez0Wis9iNHzuzsLKM6LrfvfYTjuxvcvmR+urndzp7tZ7lnrvvD9PjuxnJLLNooHzu9MOrjs9KrUOYjYgtA9XqydyVJkrqx0gA/AExWy5PA/t6UI0nqVjeXEX4B+E/gmoh4ISLuAO4GboqIY8B7qrYkaQ11nFzMzA9eYNWNPa5FkrQM3ompnut0Q4033Ei9YYBLUqEMcEkqlAGuvhnEVInTM1pPDHBJKpQBLkmFMsA1cpZOozilolFmgEtSoQxw9cyFznYH/WVmq8/3zFyjwACXpEIZ4JJUqFU/D1zr2/jeRzh+9y0t+wetuYZhqEnqJc/AJalQBrgkFcoAV1vtph1G6eqO8b2P+BRFFccAl6RCGeCSVCgDfB06NxXQy1vOh316odvpnqVj02laZTk/87CPj8pkgEtSoQxwSSrUqgI8Im6OiGci4tmI2NurotQ7K72ZpXl6pdW0y3Lfcxi1mibpNG3SixuEWk1fNU/frNZy36Pk/46tjNrP08qKAzwiLgL+FngfcC3wwYi4tleFSZLaW80Z+A3As5n5XGb+FJgBdvamLElSJ5GZK9sx4gPAzZn5R1X7Q8BvZOZHmrabAqaq5jXAMysvd2RdDvxg0EUMKcemPcenvVEZn1/NzCuaO/v+MKvM3Afs6/fnlCwiDmdmfdB1DCPHpj3Hp71RH5/VTKGcAK5a0r6y6pMkrYHVBPg3gG0RcXVEXAzcBhzoTVmSpE5WPIWSmWcj4iPAPwMXAfdl5lM9q2x9cYrpwhyb9hyf9kZ6fFb8JaYkabC8E1OSCmWAS1KhDPABiYjfj4inIuJnEVFvWvex6vEEz0TEewdV46D5qIafFxH3RcTJiHhySd/miDgYEceq18sGWeOgRMRVEfFoRDxd/X91V9U/0uNjgA/Ok8DvAY8t7aweR3Ab8BbgZuDvqscWrCs+qqGlz7N4TCy1FziUmduAQ1V7PToL7MnMa4G3Ax+ujpeRHh8DfEAy82hmtrordScwk5k/yczvAs+y+NiC9cZHNTTJzMeAl5q6dwLT1fI0sGtNixoSmfliZn6zWv4xcBTYyoiPjwE+fLYC31vSfqHqW28ch+7UMvPFavn7QG2QxQyDiBgH3gY8zoiPT99vpV/PIuJfgF9useoTmbl/revRaMvMjIh1fV1wRIwBXwI+mpk/iohX143i+BjgfZSZ71nBbj6iYJHj0J35iNiSmS9GxBbg5KALGpSIeB2L4X1/Zj5UdY/0+DiFMnwOALdFxC9GxNXANuDrA65pEHxUQ3cOAJPV8iSwLv9lF4un2vcCRzPz00tWjfT4eCfmgETE7wKfA64ATgNPZOZ7q3WfAP6QxW/WP5qZXxlYoQMUEe8H/prXHtXwyQGXNFAR8QWgweIjUueBPwf+CXgA+BXgeeDWzGz+onPkRcS7gH8H5oCfVd0fZ3EefGTHxwCXpEI5hSJJhTLAJalQBrgkFcoAl6RCGeCSVCgDXJIKZYBLUqH+H8866G1N0NIJAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Fit a normal distribution to returns\n","\n","# mean and standard deviation\n","mu, std = norm.fit(VIX['returns'].dropna()) \n","  \n","# Plot the histogram.\n","plt.hist(VIX['returns'], bins=100, density=True, alpha=0.6, color='b')\n","  \n","# Plot the PDF.\n","xmin, xmax = plt.xlim()\n","x = np.linspace(xmin, xmax, 100)\n","p = norm.pdf(x, mu, std)\n","  \n","plt.plot(x, p, 'k', linewidth=2)\n","title = \"Fit Values on returns: mu = {:.2f} and std = {:.2f}\".format(mu, std)\n","plt.title(title)\n","  \n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"HjqB1UCDwwA8","executionInfo":{"status":"ok","timestamp":1667044040607,"user_tz":-60,"elapsed":15,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"86d2bf66-3d3e-4d96-8212-e68281a69c3b"},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["## Plot ACF and APCF for time series\n","plot_acf(VIX['returns'].dropna())\n","plot_pacf(VIX['returns'].dropna())\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"K9Lb3YzdfW7d","executionInfo":{"status":"ok","timestamp":1667044041232,"user_tz":-60,"elapsed":636,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"b6737dea-6e36-4bde-d04e-82161f0caec2"},"execution_count":43,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Hurst exponent analysis on the VIX data set:\n","\n","I find the hurst exponent for various time series."],"metadata":{"id":"Zlml-QyCyE9C"}},{"cell_type":"code","source":["returns_hurst_series, H = get_hurst_exponent(VIX['returns'], max_lag=50)\n","#Plot the log returns over the whole data set\n","VIX.dropna(inplace=True)\n","\n","fig = plt.figure(figsize=(20,10))\n","fig.set_figwidth(12)\n","plt.loglog(returns_hurst_series, label=\"Hurst analysis returns\") \n","plt.legend(loc=\"upper right\")\n","plt.title(\"Range over time\")\n","plt.xlabel('Time')\n","plt.ylabel('Range')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"Ak-Bc5sVyLkV","executionInfo":{"status":"ok","timestamp":1667044041232,"user_tz":-60,"elapsed":8,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"6e1e574f-9c72-4d16-8e46-c85d84a017d3"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:47: RuntimeWarning: invalid value encountered in double_scalars\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["The Loglog gradient is the hurst exponent, given below.\n","\n","The indicator has a value of 0.74 for this time series when considering data going back 100 days. To consider one year we should use  252 days as this is the number of trading days each year."],"metadata":{"id":"xW18k-YvBlwf"}},{"cell_type":"code","source":["H"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Np_5ZH8NBiWd","executionInfo":{"status":"ok","timestamp":1667044041765,"user_tz":-60,"elapsed":538,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"0ffb8c65-0041-4e2b-c4bc-391adc22b0c0"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.31059695])"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["As a sanity check we can see that that Hurst exponent of the log returns is approximatly the same value, given by the variable H_2 below. "],"metadata":{"id":"NtFULYThCJj5"}},{"cell_type":"code","source":["returns_hurst_series_2, H_2 = get_hurst_exponent(VIX['log returns'], max_lag=50)\n","#Plot the log returns over the whole data set\n","VIX.dropna(inplace=True)\n","\n","fig = plt.figure(figsize=(20,10))\n","fig.set_figwidth(12)\n","plt.loglog(returns_hurst_series_2, label=\"Hurst analysis log returns\") \n","plt.legend(loc=\"upper right\")\n","plt.title(\"Range over time\")\n","plt.xlabel('Time')\n","plt.ylabel('Range')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"W5MIpZTiynNC","executionInfo":{"status":"ok","timestamp":1667044041765,"user_tz":-60,"elapsed":7,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"8d6a8ecc-9206-4a04-9ceb-2a6a5cdb6d9f"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:47: RuntimeWarning: invalid value encountered in double_scalars\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["H_2"],"metadata":{"id":"GXWtGp4WzkS7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667044041766,"user_tz":-60,"elapsed":5,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"0d12d4de-8957-4a3f-cdbe-34c63562a096"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.30860491])"]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["The value of 0.74 for the Hurst exponent implies that the data is persistant, which means it is characterised by volatility clustering.\n","\n","We can check to see if this holds over different time scales. Consider now 252 days."],"metadata":{"id":"plOHHH2FCYEx"}},{"cell_type":"code","source":["returns_hurst_series_3, H_3 = get_hurst_exponent(VIX['returns'], max_lag=252)\n","#Plot the log returns over the whole data set\n","VIX.dropna(inplace=True)\n","\n","fig = plt.figure(figsize=(20,10))\n","fig.set_figwidth(12)\n","plt.loglog(returns_hurst_series_3, label=\"Hurst analysis returns\") \n","plt.legend(loc=\"upper right\")\n","plt.title(\"Range over time\")\n","plt.xlabel('Time')\n","plt.ylabel('Range')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"zs4dwmAECuo_","executionInfo":{"status":"ok","timestamp":1667044042171,"user_tz":-60,"elapsed":409,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"8d513cae-9d24-43ae-96d1-37eec202b0b3"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:47: RuntimeWarning: invalid value encountered in double_scalars\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["H_3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EpWeUe2PCz_r","executionInfo":{"status":"ok","timestamp":1667044042171,"user_tz":-60,"elapsed":6,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"8f37d673-e06b-4ac6-ccc8-5b9189cb69c5"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.18829649])"]},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","source":["A value of $H \\in [0,\\frac{1}{2})$ implies that over a yearly range the data is mean reverting. When using the Hurst exponent we should be careful to consider the range of data need for the model, and choose the garch model of our choice contingent on the value of $H$."],"metadata":{"id":"rvRYMeqNC8y4"}},{"cell_type":"code","source":["#Plot the log returns over the whole data set\n","VIX.dropna(inplace=True)\n","\n","fig = plt.figure(figsize=(20,10))\n","fig.set_figwidth(12)\n","plt.plot(GSPC['log returns'], label=\"Daily Log Returns\") #Only plot the last 20 weeks of data\n","plt.legend(loc=\"upper right\")\n","plt.title(\"Daily Log Returns\")\n","plt.xlabel('Time')\n","plt.ylabel('Log Returns')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":621},"id":"m7tRp-jjSHBZ","executionInfo":{"status":"ok","timestamp":1667056055055,"user_tz":-60,"elapsed":435,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"b4f41a7c-f293-4787-f639-2485fe8b829d"},"execution_count":156,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Plot the log returns over the whole data set\n","VIX.dropna(inplace=True)\n","\n","fig = plt.figure(figsize=(20,10))\n","fig.set_figwidth(12)\n","plt.plot(VIX['log returns'], label=\"Daily Log Returns\") #Only plot the last 20 weeks of data\n","plt.legend(loc=\"upper right\")\n","plt.title(\"Daily Log Returns\")\n","plt.xlabel('Time')\n","plt.ylabel('Log Returns')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":621},"id":"9buqNZj23lfV","executionInfo":{"status":"ok","timestamp":1667044042839,"user_tz":-60,"elapsed":671,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"cf38a40a-7285-4ed4-9de6-17b7203103da"},"execution_count":50,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Below is a plot of the daily volatility of the log returns as estimated by the square daily log returns."],"metadata":{"id":"xrO6OaClBMmN"}},{"cell_type":"code","source":["#Compute estimated daily volatility as described above:\n","GSPC['daily_log_vol_est'] = GSPC['log returns']**2\n","\n","#Plot the log returns over the whole data set\n","GSPC.dropna(inplace=True)\n","\n","fig = plt.figure(figsize=(20,10))\n","fig.set_figwidth(12)\n","plt.plot(GSPC['daily_log_vol_est'], label=\"Daily Log Volatility\") #Only plot the last 20 weeks of data\n","plt.legend(loc=\"upper right\")\n","plt.title(\"Daily Log volatility \")\n","plt.xlabel('Time')\n","plt.ylabel('Volatility')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":621},"id":"s2puY8kqTVG4","executionInfo":{"status":"ok","timestamp":1667044042839,"user_tz":-60,"elapsed":9,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"561b37d5-d7d5-4f99-dc22-096be10d32ef"},"execution_count":51,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## GARCH From Package"],"metadata":{"id":"ZoGbuaKAWScI"}},{"cell_type":"markdown","source":["Will we start by fitting a GARCH(1,1) model over several rolling periods."],"metadata":{"id":"OpelYaQmYOJU"}},{"cell_type":"code","source":["target_variables = VIX\n","target_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"jNectEDAhNsf","executionInfo":{"status":"ok","timestamp":1667044042840,"user_tz":-60,"elapsed":8,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"90095517-efd4-406d-c9d3-8a0e9e55001c"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Open       High        Low      Close  Adj Close  Volume  \\\n","Date                                                                        \n","2010-11-02  21.340000  21.820000  21.219999  21.570000  21.570000       0   \n","2010-11-03  21.660000  22.020000  19.540001  19.559999  19.559999       0   \n","2010-11-04  18.030001  18.799999  17.969999  18.520000  18.520000       0   \n","2010-11-05  18.070000  18.440001  17.920000  18.260000  18.260000       0   \n","2010-11-08  19.330000  19.350000  18.209999  18.290001  18.290001       0   \n","...               ...        ...        ...        ...        ...     ...   \n","2022-09-27  31.200001  34.139999  30.299999  32.599998  32.599998       0   \n","2022-09-28  34.500000  34.880001  30.030001  30.180000  30.180000       0   \n","2022-09-29  31.670000  33.459999  31.160000  31.840000  31.840000       0   \n","2022-09-30  31.610001  33.250000  29.389999  31.620001  31.620001       0   \n","2022-10-03  33.000000  33.060001  29.629999  30.100000  30.100000       0   \n","\n","             returns  log returns  \n","Date                               \n","2010-11-02 -0.260000    -0.011982  \n","2010-11-03 -2.010000    -0.097817  \n","2010-11-04 -1.039999    -0.054635  \n","2010-11-05 -0.260000    -0.014138  \n","2010-11-08  0.030001     0.001642  \n","...              ...          ...  \n","2022-09-27  0.340000     0.010484  \n","2022-09-28 -2.419998    -0.077133  \n","2022-09-29  1.660000     0.053544  \n","2022-09-30 -0.219999    -0.006934  \n","2022-10-03 -1.520000    -0.049265  \n","\n","[3000 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-c22e55bb-73d8-4677-bd2e-ba8088f089aa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","      <th>returns</th>\n","      <th>log returns</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-11-02</th>\n","      <td>21.340000</td>\n","      <td>21.820000</td>\n","      <td>21.219999</td>\n","      <td>21.570000</td>\n","      <td>21.570000</td>\n","      <td>0</td>\n","      <td>-0.260000</td>\n","      <td>-0.011982</td>\n","    </tr>\n","    <tr>\n","      <th>2010-11-03</th>\n","      <td>21.660000</td>\n","      <td>22.020000</td>\n","      <td>19.540001</td>\n","      <td>19.559999</td>\n","      <td>19.559999</td>\n","      <td>0</td>\n","      <td>-2.010000</td>\n","      <td>-0.097817</td>\n","    </tr>\n","    <tr>\n","      <th>2010-11-04</th>\n","      <td>18.030001</td>\n","      <td>18.799999</td>\n","      <td>17.969999</td>\n","      <td>18.520000</td>\n","      <td>18.520000</td>\n","      <td>0</td>\n","      <td>-1.039999</td>\n","      <td>-0.054635</td>\n","    </tr>\n","    <tr>\n","      <th>2010-11-05</th>\n","      <td>18.070000</td>\n","      <td>18.440001</td>\n","      <td>17.920000</td>\n","      <td>18.260000</td>\n","      <td>18.260000</td>\n","      <td>0</td>\n","      <td>-0.260000</td>\n","      <td>-0.014138</td>\n","    </tr>\n","    <tr>\n","      <th>2010-11-08</th>\n","      <td>19.330000</td>\n","      <td>19.350000</td>\n","      <td>18.209999</td>\n","      <td>18.290001</td>\n","      <td>18.290001</td>\n","      <td>0</td>\n","      <td>0.030001</td>\n","      <td>0.001642</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-27</th>\n","      <td>31.200001</td>\n","      <td>34.139999</td>\n","      <td>30.299999</td>\n","      <td>32.599998</td>\n","      <td>32.599998</td>\n","      <td>0</td>\n","      <td>0.340000</td>\n","      <td>0.010484</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-28</th>\n","      <td>34.500000</td>\n","      <td>34.880001</td>\n","      <td>30.030001</td>\n","      <td>30.180000</td>\n","      <td>30.180000</td>\n","      <td>0</td>\n","      <td>-2.419998</td>\n","      <td>-0.077133</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-29</th>\n","      <td>31.670000</td>\n","      <td>33.459999</td>\n","      <td>31.160000</td>\n","      <td>31.840000</td>\n","      <td>31.840000</td>\n","      <td>0</td>\n","      <td>1.660000</td>\n","      <td>0.053544</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30</th>\n","      <td>31.610001</td>\n","      <td>33.250000</td>\n","      <td>29.389999</td>\n","      <td>31.620001</td>\n","      <td>31.620001</td>\n","      <td>0</td>\n","      <td>-0.219999</td>\n","      <td>-0.006934</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-03</th>\n","      <td>33.000000</td>\n","      <td>33.060001</td>\n","      <td>29.629999</td>\n","      <td>30.100000</td>\n","      <td>30.100000</td>\n","      <td>0</td>\n","      <td>-1.520000</td>\n","      <td>-0.049265</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3000 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c22e55bb-73d8-4677-bd2e-ba8088f089aa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c22e55bb-73d8-4677-bd2e-ba8088f089aa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c22e55bb-73d8-4677-bd2e-ba8088f089aa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["### Application to daily log volatility, broken due to scale of time series.\n","\n","rolling_predictions = []\n","\n","test_size = 252\n","\n","for i in range(test_size): #Checks out\n","    training_data = 1000 * GSPC[\"daily_log_vol_est\"][:-(test_size-i)]\n","    model = arch_model(training_data, p=3, q=3)\n","    model_fit = model.fit(disp='off')\n","    predict = model_fit.forecast(horizon=1)\n","    rolling_predictions.append(np.sqrt(predict.variance.values[0][0]))\n","    \n","rolling_predictions = pd.Series(rolling_predictions, index=GSPC[\"daily_log_vol_est\"].index[-test_size:])\n","\n","plt.figure(figsize=(10,4))\n","plt.title('Returns Predictions')\n","plt.plot(rolling_predictions, label='Prediction')\n","plt.plot(1000 * GSPC[\"daily_log_vol_est\"][-(test_size):], label='Actual')\n","plt.title('Rolling Prediction')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"xQk6AfeLjgEl","colab":{"base_uri":"https://localhost:8080/"},"outputId":"c2157786-3760-46fa-a885-fa99fa95e8ed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/arch/univariate/base.py:755: ConvergenceWarning: The optimizer returned code 8. The message is:\n","Positive directional derivative for linesearch\n","See scipy.optimize.fmin_slsqp for code meaning.\n","\n","  ConvergenceWarning,\n","/usr/local/lib/python3.7/dist-packages/arch/univariate/base.py:755: ConvergenceWarning: The optimizer returned code 8. The message is:\n","Positive directional derivative for linesearch\n","See scipy.optimize.fmin_slsqp for code meaning.\n","\n","  ConvergenceWarning,\n","/usr/local/lib/python3.7/dist-packages/arch/univariate/base.py:755: ConvergenceWarning: The optimizer returned code 8. The message is:\n","Positive directional derivative for linesearch\n","See scipy.optimize.fmin_slsqp for code meaning.\n","\n","  ConvergenceWarning,\n","/usr/local/lib/python3.7/dist-packages/arch/univariate/base.py:755: ConvergenceWarning: The optimizer returned code 8. The message is:\n","Positive directional derivative for linesearch\n","See scipy.optimize.fmin_slsqp for code meaning.\n","\n","  ConvergenceWarning,\n","/usr/local/lib/python3.7/dist-packages/arch/univariate/base.py:755: ConvergenceWarning: The optimizer returned code 8. The message is:\n","Positive directional derivative for linesearch\n","See scipy.optimize.fmin_slsqp for code meaning.\n","\n","  ConvergenceWarning,\n","/usr/local/lib/python3.7/dist-packages/arch/univariate/base.py:755: ConvergenceWarning: The optimizer returned code 8. The message is:\n","Positive directional derivative for linesearch\n","See scipy.optimize.fmin_slsqp for code meaning.\n","\n","  ConvergenceWarning,\n","/usr/local/lib/python3.7/dist-packages/arch/univariate/base.py:755: ConvergenceWarning: The optimizer returned code 8. The message is:\n","Positive directional derivative for linesearch\n","See scipy.optimize.fmin_slsqp for code meaning.\n","\n","  ConvergenceWarning,\n"]}]},{"cell_type":"code","source":["predict.variance.values[0][0]"],"metadata":{"id":"Us7vTdLnoRws"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Application to ViX\n","\n","rolling_predictions = []\n","\n","test_size = 252\n","\n","for i in range(test_size): #Checks out\n","    training_data = target_variables[\"Close\"][:-(test_size-i)]\n","    model = arch_model(training_data, p=2, q=2, dist=\"skewt\")\n","    model_fit = model.fit(disp='off')\n","    predict = model_fit.forecast(horizon=10)\n","    rolling_predictions.append(np.sqrt(predict.variance.values[0][0]))\n","    \n","rolling_predictions = pd.Series(rolling_predictions, index=VIX[\"log returns\"].index[-test_size:])\n","\n","plt.figure(figsize=(10,4))\n","plt.title('VIX Predictions')\n","plt.plot(rolling_predictions + 14.147944, label='Prediction')\n","plt.plot(target_variables[\"Close\"][-(test_size):], label='Actual')\n","plt.title('Rolling Prediction')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"QX1WN8iY9QtH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a = np.array([1,2,3,4,5])"],"metadata":{"id":"r9VlN4AMAj8t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a[:-(5-1)]"],"metadata":{"id":"y5aQzhB-AoWy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Application to ViX\n","\n","rolling_predictions = []\n","\n","test_size = 50\n","\n","for i in range(test_size): #Checks out\n","    training_data = target_variables[\"Close\"][:-(test_size-i)]\n","    model = arch_model(training_data, p=2, q=2,dist=\"skewt\")\n","    model_fit = model.fit(disp='off')\n","    predict = model_fit.forecast(horizon=1)\n","    rolling_predictions.append(np.sqrt(predict.variance.values[0][0]))\n","    \n","rolling_predictions = pd.Series(rolling_predictions, index=VIX[\"log returns\"].index[-test_size:])\n","\n","plt.figure(figsize=(10,4))\n","plt.title('VIX Predictions')\n","plt.plot(rolling_predictions + predict.mean.values[0][0], label='Prediction')\n","plt.plot(target_variables[\"Close\"][-(test_size):], label='Actual')\n","plt.title('Rolling Prediction')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"_9OEfACpZY3c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["returns_hurst_series,h = get_hurst_exponent(target_variables[\"Close\"], max_lag=300)\n","\n","fig = plt.figure(figsize=(20,10))\n","fig.set_figwidth(12)\n","plt.loglog(returns_hurst_series[1:], label=\"Hurst analysis log returns\") \n","plt.legend(loc=\"upper right\")\n","plt.title(\"Range over time\")\n","plt.xlabel('Time')\n","plt.ylabel('Range')\n","plt.show()\n"],"metadata":{"id":"oHTERlYOztS-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["h"],"metadata":{"id":"dTkr5MEZDXYr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\"\"\"\n","After some quick googling (due to my lack of finance knowledge), a GARCH model seems most appropriate.\n","https://www.investopedia.com/terms/g/garch.asp\n","\"\"\"\n","garch_model = arch.arch_model(target_variables[\"Close\"], p=1, q=1, mean=\"constant\", vol=\"GARCH\", dist=\"normal\")#Check me\n","apply_garch = garch_model.fit(disp=\"off\")\n","# Printing the parameters outputs a number of variables, we're most interested in the alpha. The bigger the alpha, the more volatile!\n","print(apply_garch.params)\n","forecast = apply_garch.forecast(horizon = 5)\n","print(forecast.variance[-1:])\n","\n","rolling_predictions = []\n","test_size = 365 # test on one year\n","\n","for i in range(test_size): #Checks out\n","    training_data = target_variables[\"Close\"][:-(test_size-i)]\n","    model = arch_model(training_data, p=1, q=1)\n","    model_fit = model.fit(disp='off')\n","    predict = model_fit.forecast(horizon=1)\n","    rolling_predictions.append(np.sqrt(predict.variance.values[-1,:][0]))\n","    \n","rolling_predictions = pd.Series(rolling_predictions, index=data[\"Return\"].index[-365:])\n","\n","plt.figure(figsize=(10,4))\n","plt.title('VIX Predictions')\n","plt.plot(rolling_predictions, label='Prediction')\n","plt.plot(target_variables[\"Close\"][-(test_size):], label='Actual')\n","plt.title('Rolling Prediction')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"UCmx9yaq3lUd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Modeling function:\n","\n","The modeling function is of the form $f(\\{x_i\\}_i,H(\\{x_i\\},\\tau)) → (\\{y_i\\}_i)$ where $\\{x_i\\}_i$ is the input time series, $H(\\tau)$ is the hurst exponent at lag $\\tau$ and $\\{y_i\\}_i$ is the predicted series.\n","\n","The choise of GARCH model to use will depend on the value of $H(\\tau)$ since different types of GARCH model are better for different types of data. \n","\n","Model workflow:\n","\n","1: Get time series statistical properties and Hurst exponent.\n","\n","2: Fit a selection of models, determine which are the best fit and return the best fit forcasts.\n","\n"],"metadata":{"id":"N_Uvim7bDjw1"}},{"cell_type":"code","source":["a[a.shape[0]-2:]"],"metadata":{"id":"KUkaczXDSjG3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["##This function will take a numpy array and return a forcast for the n entries.\n","## Determine the hurst exponent of a time series ##\n","\n","## Inputs\n","# time_series - mean 0 np.array(n).\n","# max_lag - integerm ideally such that max_lag | n\n","\n","\n","## Outputs\n","# H - Hurst exponent estimate\n","\n","def get_hurst_exponent(time_series, max_lag):\n","\n","  ##Truncate time series\n","  time_series = time_series[time_series.shape[0] - max_lag:]\n","  #print('ts: ' , time_series)\n","\n","  ##Compute mean\n","  mu = time_series.mean()\n","  #print('mu: ' , mu)\n","\n","  ##Compute adjusted series\n","  adusuted_series = np.zeros(max_lag)\n","  for i in range(time_series.shape[0]):\n","    adusuted_series[i] = time_series[i] - mu\n","  #print(\"as: \" , adusuted_series)\n","\n","  ##Compute Deviant Series\n","  deviant_series = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    deviant_series[t] = np.sum(adusuted_series[:t+1])\n","  #print('ds: ' , deviant_series)\n","\n","  ##Compute range series\n","  range_series = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    range_series[t] = np.max(deviant_series[:t+1]) - np.min(deviant_series[:t+1])\n","  #print('rs: ' , range_series)\n","\n","  ##Compute std series\n","  std_series = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    std_series[t] = np.std(adusuted_series[:t+1])\n","  #print('std: ' , std_series)\n","\n","  ##Compute (Ra/sigma)_t\n","  Ra_sigma = np.zeros(max_lag)\n","  for t in range(0,max_lag):\n","    Ra_sigma[t] = range_series[t]/std_series[t]\n","  #print('ra/s: ' , Ra_sigma)\n","\n","  ##Compute logs\n","  #print(Ra_sigma)\n","  y = np.log2(Ra_sigma[1:])\n","  X = np.log2(np.linspace(1,Ra_sigma[1:].shape[0],Ra_sigma[1:].shape[0]))\n","  X = X[:, None]\n","  #print(X)\n","  #print(np.linspace(1,Ra_sigma.shape[0],Ra_sigma.shape[0]))\n","  #print(y)\n","  ##Find log log gradient (This is the hurst exponent)\n","  reg = LinearRegression().fit(X, y)\n","\n","  return Ra_sigma[1:], reg.coef_\n","\n","\n","## Determine the hurst exponent of a time series ##\n","\n","## Inputs\n","# time_series - mean 0 np.array(n).\n","# lags - integerm ideally such that max_lag | n\n","# hor - The number of time incriments that we wish to forcast.\n","# vol - type of GARCH model, best to determin this beforehand. Set the GARCH by defualt. This must be a string.\n","\n","## Outputs\n","# H - Hurst exponent estimate\n","# S Rolling prediction over given lag (arrat of length n).\n","def GARCH_FORCAST(time_series,lags,hor,vol = 'GARCH'):\n","  R,H = get_hurst_exponent(time_series, lags) # Get hurst exponent, see above function for details.\n","\n"," \n","\n","  if H < 0.5:\n","    print('Mean reverting, consider the use of an AR process')\n","    #Model one\n","\n","  elif H >= 0.5:\n","    print('Volatility clustering, appropriate for a GARCH model')\n","    #Model 2\n","\n","\n","  ## Define the ARCH model, the specific type is determined using the vol = ... parameter.\n","  # am_1 = arch_model(time_series[time_series.shape[0]-lags:], vol=\"Garch\", p=1, q=1, dist=\"Normal\")\n","  # res_1 = am_1.fit()\n","\n","  rolling_predictions = []\n","  test_size = lags # test on one year\n","\n","  for i in range(test_size): #Checks out\n","    training_data = target_variables[\"Close\"][:-(test_size-i)]\n","    model = arch_model(time_series[time_series.shape[0]-lags:], vol=vol, p=1, q=1, dist=\"Normal\")\n","    model_fit = model.fit(disp='off')\n","    predict = model_fit.forecast(horizon=hor)\n","    rolling_predictions.append(np.sqrt(predict.variance.values[-1,:][0]))\n","\n","  return H,rolling_predictions\n","  \n","\n"],"metadata":{"id":"71j9NsLMcUwm","executionInfo":{"status":"ok","timestamp":1667047272583,"user_tz":-60,"elapsed":258,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":74,"outputs":[]},{"cell_type":"markdown","source":["# Homemade GARCH code"],"metadata":{"id":"FPuOzQQ34XC2"}},{"cell_type":"markdown","source":["The above GARCH model is extemely siimple. We would like to be able to model a set of volatilities at the same time since in reality they are corrolated a cross assests and markets. It would also be benificial to remove the requirment on the gaussian nature of the residuals. The normal distribution is typically chosen because it simplifies large parts of the mathematics, but it is not realistic, as much of the time the real ditribution (of returns) is skewed or otherwise mishaped by market non-linearities."],"metadata":{"id":"lb_J9232mAGB"}},{"cell_type":"markdown","source":["Start by remaking the GARCH(1,1) class"],"metadata":{"id":"KxfGDrhDpwt0"}},{"cell_type":"code","source":["import numpy as np\n","import scipy\n","import pandas as pd\n","\n","class garchOneOne(object):\n","       \n","  def __init__(self, logReturns):\n","      self.logReturns = logReturns * 100\n","      self.sigma_2 = self.garch_filter(self.garch_optimization())\n","      self.coefficients = self.garch_optimization()\n","      \n","  def garch_filter(self, parameters):\n","      \"Returns the variance expression of a GARCH(1,1) process.\"\n","      \n","      # Slicing the parameters list\n","      omega = parameters[0]\n","      alpha = parameters[1]\n","      beta = parameters[2]\n","      \n","      # Length of logReturns\n","      length = len(self.logReturns)\n","      \n","      # Initializing an empty array\n","      sigma_2 = np.zeros(length)\n","      \n","      # Filling the array, if i == 0 then uses the long term variance.\n","      for i in range(length):\n","          if i == 0:\n","              sigma_2[i] = omega / (1 - alpha - beta)\n","          else:\n","              sigma_2[i] = omega + alpha * self.logReturns[i-1]**2 + beta * sigma_2[i-1]\n","      \n","      return sigma_2 \n","      \n","  def garch_loglikehihood(self, parameters):\n","    \"Defines the log likelihood sum to be optimized given the parameters.\"\n","    length = len(self.logReturns)\n","    \n","    sigma_2 = self.garch_filter(parameters)\n","    \n","    loglikelihood = - np.sum(-np.log(sigma_2) - self.logReturns**2 / sigma_2)\n","    return loglikelihood\n","    \n","  def garch_optimization(self):\n","    \"Optimizes the log likelihood function and returns estimated coefficients\"\n","    # Parameters initialization\n","    parameters = [.1, .05, .92]\n","    \n","    # Parameters optimization, scipy does not have a maximize function, so we minimize the opposite of the equation described earlier\n","    opt = scipy.optimize.minimize(self.garch_loglikehihood, parameters,\n","                                  bounds = ((.001,1),(.001,1),(.001,1)))\n","    \n","    variance = .01**2 * opt.x[0] / (1 - opt.x[1] - opt.x[2])   # Times .01**2 because it concerns squared returns\n","    \n","    return np.append(opt.x, variance)\n"],"metadata":{"id":"oJbnUNZOpy8R","executionInfo":{"status":"ok","timestamp":1667047193605,"user_tz":-60,"elapsed":332,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["# Downloading data\n","SPX = yf.download('^GSPC', start = '2005-01-01', interval = '1d') #S&P 500\n","CAC = yf.download('^FCHI', start = '2005-01-01', interval = '1d') \n","VIX = yf.download('^VIX', start = SPX.index[1], interval = '1d') #S&P 500 volatility index\n","# Calculating log returns\n","SPX['log_returns'] = np.log(SPX['Adj Close']) - np.log(SPX['Adj Close'].shift(1))\n","SPX['returns'] = SPX['Adj Close'] - SPX['Adj Close'].shift(1)\n","CAC['log_returns'] = np.log(CAC['Adj Close']) - np.log(CAC['Adj Close'].shift(1))\n","CAC['returns'] = CAC['Adj Close'] - CAC['Adj Close'].shift(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BRBKQRIgve3n","executionInfo":{"status":"ok","timestamp":1667055912883,"user_tz":-60,"elapsed":797,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"660a1bf1-3059-4043-bb67-18c869825b47"},"execution_count":148,"outputs":[{"output_type":"stream","name":"stdout","text":["[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n"]}]},{"cell_type":"code","source":["modelSPX.sigma_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cJ4RHgdE9Mbg","executionInfo":{"status":"ok","timestamp":1667050561665,"user_tz":-60,"elapsed":366,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"7537878c-c444-4654-b512-c9d97f1849cd"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.20934137, 1.23143899, 1.0871503 , ..., 2.6028826 , 2.30352392,\n","       2.02671083])"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["# Estimation using our previously coded classes\n","modelSPX = garchOneOne(SPX['log_returns'][1:])\n","modelCAC = garchOneOne(CAC['log_returns'][1:])\n","# Fitting using the arch_model package\n","arch_mSPX = arch_model(SPX['log_returns'][1:] * 100, mean = 'Zero', vol = 'GARCH')\n","arch_mSPX = arch_mSPX.fit()\n","arch_mCAC = arch_model(CAC['log_returns'][1:] * 100, mean = 'Zero', vol = 'GARCH')\n","arch_mCAC = arch_mCAC.fit()\n","# Extracting confidence intervals\n","conf_int_SPX = pd.DataFrame(arch_mSPX.conf_int(alpha = .2))\n","conf_int_CAC = pd.DataFrame(arch_mCAC.conf_int(alpha = .2))\n","# Creating the test\n","conf_int_SPX['garchOneOne'] = modelSPX.coefficients[:-1]\n","conf_int_CAC['garchOneOne'] = modelCAC.coefficients[:-1]\n","conf_int_SPX['Test'] = np.where(conf_int_SPX['garchOneOne'] < conf_int_SPX['upper'], np.where(conf_int_SPX['garchOneOne'] > conf_int_SPX['lower'], \"Ok\", \"Not ok\"), \"Not ok\") \n","conf_int_CAC['Test'] = np.where(conf_int_CAC['garchOneOne'] < conf_int_CAC['upper'], np.where(conf_int_CAC['garchOneOne'] > conf_int_CAC['lower'], \"Ok\", \"Not ok\"), \"Not ok\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m8NLeU53v_ds","executionInfo":{"status":"ok","timestamp":1667047197656,"user_tz":-60,"elapsed":3197,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"4166ba7e-f7e7-4a1a-b179-dcbbf6190764"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Iteration:      1,   Func. Count:      5,   Neg. LLF: 26896.810577754382\n","Iteration:      2,   Func. Count:     15,   Neg. LLF: 754047508.9705462\n","Iteration:      3,   Func. Count:     20,   Neg. LLF: 15518.715795610608\n","Iteration:      4,   Func. Count:     25,   Neg. LLF: 6152.662289415566\n","Iteration:      5,   Func. Count:     30,   Neg. LLF: 8186.936647716092\n","Iteration:      6,   Func. Count:     35,   Neg. LLF: 6035.948668465055\n","Iteration:      7,   Func. Count:     40,   Neg. LLF: 6032.151745968144\n","Iteration:      8,   Func. Count:     45,   Neg. LLF: 6026.313027138195\n","Iteration:      9,   Func. Count:     49,   Neg. LLF: 6026.311008988294\n","Iteration:     10,   Func. Count:     53,   Neg. LLF: 6026.311000513343\n","Iteration:     11,   Func. Count:     56,   Neg. LLF: 6026.311000513397\n","Optimization terminated successfully    (Exit mode 0)\n","            Current function value: 6026.311000513343\n","            Iterations: 11\n","            Function evaluations: 56\n","            Gradient evaluations: 11\n","Iteration:      1,   Func. Count:      5,   Neg. LLF: 2550883333.663397\n","Iteration:      2,   Func. Count:     12,   Neg. LLF: 9561.936087485545\n","Iteration:      3,   Func. Count:     18,   Neg. LLF: 7107.968791253925\n","Iteration:      4,   Func. Count:     23,   Neg. LLF: 13140.64037984031\n","Iteration:      5,   Func. Count:     29,   Neg. LLF: 7083.307227094653\n","Iteration:      6,   Func. Count:     33,   Neg. LLF: 7083.282781107882\n","Iteration:      7,   Func. Count:     37,   Neg. LLF: 7083.28264417309\n","Iteration:      8,   Func. Count:     41,   Neg. LLF: 7083.28264354319\n","Optimization terminated successfully    (Exit mode 0)\n","            Current function value: 7083.28264354319\n","            Iterations: 8\n","            Function evaluations: 41\n","            Gradient evaluations: 8\n"]}]},{"cell_type":"code","source":["conf_int_SPX"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"EOtbp-sj73CK","executionInfo":{"status":"ok","timestamp":1667050236579,"user_tz":-60,"elapsed":270,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"dd98fae2-be09-4fda-a259-47b95e0752a4"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             lower     upper  garchOneOne Test\n","omega     0.022819  0.049337     0.038163   Ok\n","alpha[1]  0.087696  0.137358     0.112973   Ok\n","beta[1]   0.842126  0.895618     0.865355   Ok"],"text/html":["\n","  <div id=\"df-da8d8c81-e10b-4f0e-9304-106c3f2ec91f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lower</th>\n","      <th>upper</th>\n","      <th>garchOneOne</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>omega</th>\n","      <td>0.022819</td>\n","      <td>0.049337</td>\n","      <td>0.038163</td>\n","      <td>Ok</td>\n","    </tr>\n","    <tr>\n","      <th>alpha[1]</th>\n","      <td>0.087696</td>\n","      <td>0.137358</td>\n","      <td>0.112973</td>\n","      <td>Ok</td>\n","    </tr>\n","    <tr>\n","      <th>beta[1]</th>\n","      <td>0.842126</td>\n","      <td>0.895618</td>\n","      <td>0.865355</td>\n","      <td>Ok</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da8d8c81-e10b-4f0e-9304-106c3f2ec91f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da8d8c81-e10b-4f0e-9304-106c3f2ec91f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da8d8c81-e10b-4f0e-9304-106c3f2ec91f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["conf_int_CAC"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"Pw0GD02i8A34","executionInfo":{"status":"ok","timestamp":1667050264897,"user_tz":-60,"elapsed":244,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"1be55a88-0f2f-4b39-a5d9-8a8aef040876"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             lower     upper  garchOneOne Test\n","omega     0.022819  0.049337     0.038163   Ok\n","alpha[1]  0.087696  0.137358     0.112973   Ok\n","beta[1]   0.842126  0.895618     0.865355   Ok"],"text/html":["\n","  <div id=\"df-f3229382-3e15-49dc-9a66-b25eafa247f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lower</th>\n","      <th>upper</th>\n","      <th>garchOneOne</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>omega</th>\n","      <td>0.022819</td>\n","      <td>0.049337</td>\n","      <td>0.038163</td>\n","      <td>Ok</td>\n","    </tr>\n","    <tr>\n","      <th>alpha[1]</th>\n","      <td>0.087696</td>\n","      <td>0.137358</td>\n","      <td>0.112973</td>\n","      <td>Ok</td>\n","    </tr>\n","    <tr>\n","      <th>beta[1]</th>\n","      <td>0.842126</td>\n","      <td>0.895618</td>\n","      <td>0.865355</td>\n","      <td>Ok</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3229382-3e15-49dc-9a66-b25eafa247f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f3229382-3e15-49dc-9a66-b25eafa247f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f3229382-3e15-49dc-9a66-b25eafa247f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["# Transforming data to pandas dataframe\n","    # + Annualizing volatilities\n","    # + Indexing by date\n","dfSPX = pd.DataFrame(np.sqrt(modelSPX.sigma_2*252), index = SPX.index[1:])\n","dfCAC = pd.DataFrame(np.sqrt(modelCAC.sigma_2*252), index = CAC.index[1:])\n","# Plotting the data\n","plt.plot(dfSPX, label = 'SPX GARCH(1,1)', linewidth = .75)\n","plt.plot(dfCAC, label = 'CAC GARCH(1,1)', linewidth = .75)\n","plt.plot(VIX.Close, label = 'VIX', linewidth = .75)\n","plt.legend()\n","plt.title('GARCH(1,1) processes and VIX', fontweight = 'bold')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"YaHQt4itwH9m","executionInfo":{"status":"ok","timestamp":1667047225126,"user_tz":-60,"elapsed":852,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"a7d94e75-dba3-4823-bedf-79c7c4798e2d"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'GARCH(1,1) processes and VIX')"]},"metadata":{},"execution_count":73},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["dfSPX"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"bHR4i-VG5pTr","executionInfo":{"status":"ok","timestamp":1667052398045,"user_tz":-60,"elapsed":352,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"37730aa1-f2fd-4f5f-9335-e6f2f1347d37"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    0\n","Date                 \n","2005-01-04  17.457206\n","2005-01-05  17.615976\n","2005-01-06  16.551794\n","2005-01-07  15.583467\n","2005-01-10  14.598771\n","...               ...\n","2022-10-24  26.886292\n","2022-10-25  25.788821\n","2022-10-26  25.611060\n","2022-10-27  24.093319\n","2022-10-28  22.599361\n","\n","[4487 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-54d0626b-bed3-4ab5-ae1f-32400229414a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2005-01-04</th>\n","      <td>17.457206</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-05</th>\n","      <td>17.615976</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-06</th>\n","      <td>16.551794</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-07</th>\n","      <td>15.583467</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-10</th>\n","      <td>14.598771</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-24</th>\n","      <td>26.886292</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-25</th>\n","      <td>25.788821</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-26</th>\n","      <td>25.611060</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-27</th>\n","      <td>24.093319</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-28</th>\n","      <td>22.599361</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4487 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54d0626b-bed3-4ab5-ae1f-32400229414a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-54d0626b-bed3-4ab5-ae1f-32400229414a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-54d0626b-bed3-4ab5-ae1f-32400229414a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["VIXdf = pd.DataFrame(VIX.iloc[:,3])"],"metadata":{"id":"b9qgUbvZ6nFk","executionInfo":{"status":"ok","timestamp":1667055509548,"user_tz":-60,"elapsed":242,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":113,"outputs":[]},{"cell_type":"code","source":["VIXdf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"RXvonrM5QGea","executionInfo":{"status":"ok","timestamp":1667055512780,"user_tz":-60,"elapsed":539,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"611fe4f5-e4b9-4b09-b93f-6449a4a1a945"},"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Close\n","Date                 \n","2005-01-04  13.980000\n","2005-01-05  14.090000\n","2005-01-06  13.580000\n","2005-01-07  13.490000\n","2005-01-10  13.230000\n","...               ...\n","2022-10-24  29.850000\n","2022-10-25  28.459999\n","2022-10-26  27.280001\n","2022-10-27  27.389999\n","2022-10-28  25.750000\n","\n","[4487 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-862c590a-0a39-41b0-a542-d50df1218e64\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Close</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2005-01-04</th>\n","      <td>13.980000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-05</th>\n","      <td>14.090000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-06</th>\n","      <td>13.580000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-07</th>\n","      <td>13.490000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-10</th>\n","      <td>13.230000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-24</th>\n","      <td>29.850000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-25</th>\n","      <td>28.459999</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-26</th>\n","      <td>27.280001</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-27</th>\n","      <td>27.389999</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-28</th>\n","      <td>25.750000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4487 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-862c590a-0a39-41b0-a542-d50df1218e64')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-862c590a-0a39-41b0-a542-d50df1218e64 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-862c590a-0a39-41b0-a542-d50df1218e64');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["SPX.dropna()['']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"UIToz83b5pe7","executionInfo":{"status":"ok","timestamp":1667049677504,"user_tz":-60,"elapsed":365,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"505a4fc3-f1e6-43e0-8ad4-7dac5f03fc69"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Open         High          Low        Close    Adj Close  \\\n","Date                                                                          \n","2005-01-04  1202.079956  1205.839966  1185.390015  1188.050049  1188.050049   \n","2005-01-05  1188.050049  1192.729980  1183.719971  1183.739990  1183.739990   \n","2005-01-06  1183.739990  1191.630005  1183.270020  1187.890015  1187.890015   \n","2005-01-07  1187.890015  1192.199951  1182.160034  1186.189941  1186.189941   \n","2005-01-10  1186.189941  1194.780029  1184.800049  1190.250000  1190.250000   \n","...                 ...          ...          ...          ...          ...   \n","2022-10-24  3762.010010  3810.739990  3741.649902  3797.340088  3797.340088   \n","2022-10-25  3799.439941  3862.850098  3799.439941  3859.110107  3859.110107   \n","2022-10-26  3825.969971  3886.149902  3824.070068  3830.600098  3830.600098   \n","2022-10-27  3834.689941  3859.949951  3803.790039  3807.300049  3807.300049   \n","2022-10-28  3808.260010  3905.419922  3808.260010  3901.060059  3901.060059   \n","\n","                Volume  log_returns  \n","Date                                 \n","2005-01-04  1721000000    -0.011740  \n","2005-01-05  1738900000    -0.003634  \n","2005-01-06  1569100000     0.003500  \n","2005-01-07  1477900000    -0.001432  \n","2005-01-10  1490400000     0.003417  \n","...                ...          ...  \n","2022-10-24  4747930000     0.011812  \n","2022-10-25  4843120000     0.016136  \n","2022-10-26  4817310000    -0.007415  \n","2022-10-27  4687320000    -0.006101  \n","2022-10-28  4459410000     0.024328  \n","\n","[4487 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-929424c4-acb9-4516-99ac-dbbcadcd8d35\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","      <th>log_returns</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2005-01-04</th>\n","      <td>1202.079956</td>\n","      <td>1205.839966</td>\n","      <td>1185.390015</td>\n","      <td>1188.050049</td>\n","      <td>1188.050049</td>\n","      <td>1721000000</td>\n","      <td>-0.011740</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-05</th>\n","      <td>1188.050049</td>\n","      <td>1192.729980</td>\n","      <td>1183.719971</td>\n","      <td>1183.739990</td>\n","      <td>1183.739990</td>\n","      <td>1738900000</td>\n","      <td>-0.003634</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-06</th>\n","      <td>1183.739990</td>\n","      <td>1191.630005</td>\n","      <td>1183.270020</td>\n","      <td>1187.890015</td>\n","      <td>1187.890015</td>\n","      <td>1569100000</td>\n","      <td>0.003500</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-07</th>\n","      <td>1187.890015</td>\n","      <td>1192.199951</td>\n","      <td>1182.160034</td>\n","      <td>1186.189941</td>\n","      <td>1186.189941</td>\n","      <td>1477900000</td>\n","      <td>-0.001432</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-10</th>\n","      <td>1186.189941</td>\n","      <td>1194.780029</td>\n","      <td>1184.800049</td>\n","      <td>1190.250000</td>\n","      <td>1190.250000</td>\n","      <td>1490400000</td>\n","      <td>0.003417</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-24</th>\n","      <td>3762.010010</td>\n","      <td>3810.739990</td>\n","      <td>3741.649902</td>\n","      <td>3797.340088</td>\n","      <td>3797.340088</td>\n","      <td>4747930000</td>\n","      <td>0.011812</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-25</th>\n","      <td>3799.439941</td>\n","      <td>3862.850098</td>\n","      <td>3799.439941</td>\n","      <td>3859.110107</td>\n","      <td>3859.110107</td>\n","      <td>4843120000</td>\n","      <td>0.016136</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-26</th>\n","      <td>3825.969971</td>\n","      <td>3886.149902</td>\n","      <td>3824.070068</td>\n","      <td>3830.600098</td>\n","      <td>3830.600098</td>\n","      <td>4817310000</td>\n","      <td>-0.007415</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-27</th>\n","      <td>3834.689941</td>\n","      <td>3859.949951</td>\n","      <td>3803.790039</td>\n","      <td>3807.300049</td>\n","      <td>3807.300049</td>\n","      <td>4687320000</td>\n","      <td>-0.006101</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-28</th>\n","      <td>3808.260010</td>\n","      <td>3905.419922</td>\n","      <td>3808.260010</td>\n","      <td>3901.060059</td>\n","      <td>3901.060059</td>\n","      <td>4459410000</td>\n","      <td>0.024328</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4487 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-929424c4-acb9-4516-99ac-dbbcadcd8d35')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-929424c4-acb9-4516-99ac-dbbcadcd8d35 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-929424c4-acb9-4516-99ac-dbbcadcd8d35');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":77}]},{"cell_type":"markdown","source":["Compare the S&P 500 and the VIX"],"metadata":{"id":"hlt6T5Rn530d"}},{"cell_type":"code","source":["dfSPX.iloc[:,0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ASjcV5QcQJid","executionInfo":{"status":"ok","timestamp":1667055535854,"user_tz":-60,"elapsed":251,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"4417abdc-8783-4171-e443-54651aa7e18e"},"execution_count":117,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date\n","2005-01-04    17.457206\n","2005-01-05    17.615976\n","2005-01-06    16.551794\n","2005-01-07    15.583467\n","2005-01-10    14.598771\n","                ...    \n","2022-10-24    26.886292\n","2022-10-25    25.788821\n","2022-10-26    25.611060\n","2022-10-27    24.093319\n","2022-10-28    22.599361\n","Name: 0, Length: 4487, dtype: float64"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["#Different series between S&P 500 and VIX\n","data_sp500_vix = pd.DataFrame([SPX['returns'],VIXdf.iloc[:,0]]).T.dropna()"],"metadata":{"id":"jxQXPVT_5yoj","executionInfo":{"status":"ok","timestamp":1667056082476,"user_tz":-60,"elapsed":973,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":161,"outputs":[]},{"cell_type":"code","source":["data_sp500_vix.columns = ['S&P500 actual returns','VIX actual']"],"metadata":{"id":"M0H34fYrP18U","executionInfo":{"status":"ok","timestamp":1667056082476,"user_tz":-60,"elapsed":6,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":162,"outputs":[]},{"cell_type":"code","source":["data_sp500_vix"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"e_0luxMFQQKX","executionInfo":{"status":"ok","timestamp":1667056082477,"user_tz":-60,"elapsed":6,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"56e36e84-e04b-4299-d633-0443d5199488"},"execution_count":163,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            S&P500 actual returns  VIX actual\n","Date                                         \n","2005-01-04             -14.029907   13.980000\n","2005-01-05              -4.310059   14.090000\n","2005-01-06               4.150024   13.580000\n","2005-01-07              -1.700073   13.490000\n","2005-01-10               4.060059   13.230000\n","...                           ...         ...\n","2022-10-24              44.590088   29.850000\n","2022-10-25              61.770020   28.459999\n","2022-10-26             -28.510010   27.280001\n","2022-10-27             -23.300049   27.389999\n","2022-10-28              93.760010   25.750000\n","\n","[4487 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-1d10084b-f289-4826-b08f-8d28705ebc3e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>S&amp;P500 actual returns</th>\n","      <th>VIX actual</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2005-01-04</th>\n","      <td>-14.029907</td>\n","      <td>13.980000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-05</th>\n","      <td>-4.310059</td>\n","      <td>14.090000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-06</th>\n","      <td>4.150024</td>\n","      <td>13.580000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-07</th>\n","      <td>-1.700073</td>\n","      <td>13.490000</td>\n","    </tr>\n","    <tr>\n","      <th>2005-01-10</th>\n","      <td>4.060059</td>\n","      <td>13.230000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-24</th>\n","      <td>44.590088</td>\n","      <td>29.850000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-25</th>\n","      <td>61.770020</td>\n","      <td>28.459999</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-26</th>\n","      <td>-28.510010</td>\n","      <td>27.280001</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-27</th>\n","      <td>-23.300049</td>\n","      <td>27.389999</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-28</th>\n","      <td>93.760010</td>\n","      <td>25.750000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4487 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d10084b-f289-4826-b08f-8d28705ebc3e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1d10084b-f289-4826-b08f-8d28705ebc3e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1d10084b-f289-4826-b08f-8d28705ebc3e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["pd.plotting.scatter_matrix(data_sp500_vix, alpha = 0.2, diagonal = 'hist', hist_kwds = {'bins' :35},figsize = (10,6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"Bs3Q5nsPQXFl","executionInfo":{"status":"ok","timestamp":1667056083401,"user_tz":-60,"elapsed":584,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}},"outputId":"ccfe30d0-9e29-417a-92e2-03a1a18853ce"},"execution_count":164,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f73889a6110>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f73888dcf50>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f73889193d0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f738894e8d0>]],\n","      dtype=object)"]},"metadata":{},"execution_count":164},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 4 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["#MGARCH class"],"metadata":{"id":"4itnFBSrSgMd"}},{"cell_type":"code","source":["from scipy.optimize import minimize\n","import numpy as np\n","from scipy.special import gamma\n","\n","\n","class mgarch:\n","    \n","    def __init__(self, dist = 'norm'):\n","        if dist == 'norm' or dist == 't':\n","            self.dist = dist\n","        else: \n","            print(\"Takes pdf name as param: 'norm' or 't'.\")\n","    \n","    #For the model using the cost function defined below, in this case the log likliehood.\n","    def garch_fit(self, returns):\n","        res = minimize( self.garch_loglike, (0.01, 0.01, 0.94), args = returns,\n","              bounds = ((1e-6, 1), (1e-6, 1), (1e-6, 1)))\n","        return res.x\n","\n","    #Define the cost function\n","    def garch_loglike(self, params, returns):\n","        T = len(returns)\n","        var_t = self.garch_var(params, returns)\n","        LogL = np.sum(-np.log(2*np.pi*var_t)) - np.sum( (returns.A1**2)/(2*var_t))\n","        return -LogL\n","\n","    #Create Garch time series using train parameters.\n","    def garch_var(self, params, returns):\n","        T = len(returns)\n","        omega = params[0]\n","        alpha = params[1]\n","        beta = params[2]\n","        var_t = np.zeros(T)     \n","        for i in range(T):\n","            if i==0:\n","                var_t[i] = returns[i]**2\n","            else: \n","                var_t[i] = omega + alpha*(returns[i-1]**2) + beta*var_t[i-1]\n","        return var_t        \n","        \n","    def mgarch_loglike(self, params, D_t):\n","        # No of assets\n","        a = params[0]\n","        b = params[1]\n","        Q_bar = np.cov(self.rt.reshape(self.N, self.T))\n","\n","        Q_t = np.zeros((self.T,self.N,self.N))\n","        R_t = np.zeros((self.T,self.N,self.N))\n","        H_t = np.zeros((self.T,self.N,self.N))\n","        \n","        Q_t[0] = np.matmul(self.rt[0].T/2, self.rt[0]/2)\n","\n","        loglike = 0\n","        for i in range(1,self.T):\n","            dts = np.diag(D_t[i])\n","            dtinv = np.linalg.inv(dts)\n","            et = dtinv*self.rt[i].T\n","            Q_t[i] = (1-a-b)*Q_bar + a*(et*et.T) + b*Q_t[i-1]\n","            qts = np.linalg.inv(np.sqrt(np.diag(np.diag(Q_t[i]))))\n","\n","            R_t[i] = np.matmul(qts, np.matmul(Q_t[i], qts))\n","\n","\n","            H_t[i] = np.matmul(dts, np.matmul(R_t[i], dts))   \n","\n","            loglike = loglike + self.N*np.log(2*np.pi) + \\\n","                      2*np.log(D_t[i].sum()) + \\\n","                      np.log(np.linalg.det(R_t[i])) + \\\n","                      np.matmul(self.rt[i], (np.matmul( np.linalg.inv(H_t[i]), self.rt[i].T)))\n","\n","\n","        return loglike\n","\n","    \n","#     def mgarch_logliket(self, params, D_t):\n","#         # No of assets\n","#         a = params[0]\n","#         b = params[1]\n","#         dof = params[2]\n","#         Q_bar = np.cov(self.rt.reshape(self.N, self.T))\n","\n","#         Q_t = np.zeros((self.T,self.N,self.N))\n","#         R_t = np.zeros((self.T,self.N,self.N))\n","#         H_t = np.zeros((self.T,self.N,self.N))\n","        \n","#         Q_t[0] = np.matmul(self.rt[0].T/2, self.rt[0]/2)\n","\n","#         loglike = 0\n","#         for i in range(1,self.T):\n","#             dts = np.diag(D_t[i])\n","#             dtinv = np.linalg.inv(dts)\n","#             et = dtinv*self.rt[i].T\n","#             Q_t[i] = (1-a-b)*Q_bar + a*(et*et.T) + b*Q_t[i-1]\n","#             qts = np.linalg.inv(np.sqrt(np.diag(np.diag(Q_t[i]))))\n","\n","#             R_t[i] = np.matmul(qts, np.matmul(Q_t[i], qts))\n","\n","\n","#             H_t[i] = np.matmul(dts, np.matmul(R_t[i], dts))   \n","\n","#             loglike = loglike + np.log( gamma((self.N+dof)/2.)) - np.log(gamma(dof/2)) \\\n","#                       -(self.N/2.)*np.log(np.pi*(dof - 2)) - np.log(np.linalg.det(H_t[i])) \\\n","# - ((dof+ self.N)*( ((np.matmul(self.rt[i], (np.matmul( np.linalg.inv(H_t[i]), self.rt[i].T))))/(dof - 2.)) + 1)/2.)\n","\n","\n","#         return -loglike\n","    \n","    \n","    def predict(self, ndays = 1):\n","        if 'a' in dir(self):\n","            Q_bar = np.cov(self.rt.reshape(self.N, self.T))\n","\n","            Q_t = np.zeros((self.T,self.N,self.N))\n","            R_t = np.zeros((self.T,self.N,self.N))\n","            H_t = np.zeros((self.T,self.N,self.N))\n","\n","            Q_t[0] = np.matmul(self.rt[0].T/2, self.rt[0]/2)\n","\n","            loglike = 0\n","            for i in range(1,self.T):\n","                dts = np.diag(self.D_t[i])\n","                dtinv = np.linalg.inv(dts)\n","                et = dtinv*self.rt[i].T\n","                Q_t[i] = (1-self.a-self.b)*Q_bar + self.a*(et*et.T) + self.b*Q_t[i-1]\n","                qts = np.linalg.inv(np.sqrt(np.diag(np.diag(Q_t[i]))))\n","\n","                R_t[i] = np.matmul(qts, np.matmul(Q_t[i], qts))\n","\n","\n","                H_t[i] = np.matmul(dts, np.matmul(R_t[i], dts))  \n","\n","            if self.dist == 'norm':\n","                return {'dist': self.dist, 'cov': H_t[-1]*np.sqrt(ndays)}\n","            elif self.dist == 't':\n","                return {'dist': self.dist, 'dof': self.dof, 'cov': H_t[-1]*np.sqrt(ndays)}\n","            \n","        else:\n","            print('Model not fit')\n","            \n","    #Fit mgarch model with N assets over time period T.         \n","    def fit(self, returns):\n","        self.rt = np.matrix(returns)\n","        \n","        self.T = self.rt.shape[0]\n","        self.N = self.rt.shape[1]\n","        \n","        if self.N == 1 or self.T == 1:\n","            return 'Required: 2d-array with columns > 2' \n","        self.mean = self.rt.mean(axis = 0)\n","        self.rt = self.rt - self.mean\n","        \n","        D_t = np.zeros((self.T, self.N))\n","        for i in range(self.N):\n","            params = self.garch_fit(self.rt[:,i])\n","            D_t[:,i] = np.sqrt(self.garch_var(params, self.rt[:,i]))\n","        self.D_t = D_t\n","        if self.dist == 'norm':\n","            res = minimize(self.mgarch_loglike, (0.01, 0.94), args = D_t,\n","            bounds = ((1e-6, 1), (1e-6, 1)), \n","            #options = {'maxiter':10000000, 'disp':True},\n","            )\n","            self.a = res.x[0]\n","            self.b = res.x[1]\n","            \n","            return {'mu': self.mean, 'alpha': self.a, 'beta': self.b} \n","        elif self.dist == 't':\n","            res = minimize(self.mgarch_logliket, (0.01, 0.94, 3), args = D_t,\n","            bounds = ((1e-6, 1), (1e-6, 1), (3, None)), \n","            #options = {'maxiter':10000000, 'disp':True},\n","            )\n","            self.a = res.x[0]\n","            self.b = res.x[1]\n","            self.dof = res.x[2]\n","            return {'mu': self.mean, 'alpha': self.a, 'beta': self.b, 'dof': self.dof} \n","        "],"metadata":{"id":"CoytS7HJQsBE","executionInfo":{"status":"ok","timestamp":1667056168321,"user_tz":-60,"elapsed":610,"user":{"displayName":"George Scriven","userId":"17292128590008924412"}}},"execution_count":166,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"NlRMDTY0SjEm"},"execution_count":null,"outputs":[]}]}